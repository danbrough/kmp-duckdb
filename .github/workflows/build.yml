# This is a basic workflow that is manually triggered

name: Build workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

#      duckdb_version:
#        description: "Git commit of duckdb to compile"
#        default: "v1.0.0"
#        required: true
#        type: string


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:


  # This workflow contains a single job called "greet"
#  greet:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-22.04
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#    # Runs a single command using the runners shell
#    - name: Send greeting
#      run: echo "Hello ${{ inputs.name }} at `date`" | tee greeting.txt

#jobs:
#  job1:
#    runs-on: ubuntu-latest
#    # Map a step output to a job output
#    outputs:
#      output1: ${{ steps.step1.outputs.test }}
#      output2: ${{ steps.step2.outputs.test }}
#    steps:
#      - id: step1
#        run: echo "test=hello" >> "$GITHUB_OUTPUT"
#      - id: step2
#        run: echo "test=world" >> "$GITHUB_OUTPUT"
#  job2:
#    runs-on: ubuntu-latest
#    needs: job1
#    steps:
#      - env:
#          OUTPUT1: ${{needs.job1.outputs.output1}}
#          OUTPUT2: ${{needs.job1.outputs.output2}}
#        run: echo "$OUTPUT1 $OUTPUT2"

  upgrade:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        android_abi: [ 'x86_64', 'arm64-v8a']

    env:
      GEN: ninja
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Set up Android SDK
        if: ${{ env.ACT }} # Only run on local act setups, as GitHub Actions provides the Android SDK on Ubuntu
        uses: android-actions/setup-android@v2

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          add-to-path: true
        env:
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Upgrade
        shell: bash
        run: |
          if [ ! -f upgraded ]; then          
            wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | sudo apt-key add -
            echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | sudo tee /etc/apt/sources.list.d/adoptium.list
            sudo apt -qq update
            sudo apt -qq -y upgrade
            sudo apt -qq install cmake libssl-dev build-essential libffi-dev curl libz-dev ninja-build 
            touch upgraded
          fi
          echo GEN is $GEN
      - name: Build ${{ matrix.android_abi }}
        run: ./scripts/build_android.sh ${{ matrix.android_abi }}
          

#    - name: Install
#      shell: bash
#      run: |
#        if [ ! -f installed ]; then
#          sudo apt -y install nano  git build-essential clang temurin-17-jdk
#          touch installed
#        fi
#
#    - name: Configure source
#      shell: bash
#      run: |
#        if [ ! -d duckdb ]; then
#          git clone https://github.com/duckdb/duckdb
#          cd duckdb
#          git checkout ${{ inputs.duckdb_version }}
#        fi

#  test-something:
#    runs-on: ubuntu-22.04
#    steps:
#      - uses: actions/checkout@v4
#      - name: THang
#        shell: bash
#        run: ls -al
#
