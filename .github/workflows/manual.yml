# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: false
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:



  test1:
    runs-on: ubuntu-latest
    steps:

      - name: Upgrade
        #if: ${{ env.ACT }} # Only run on local act setups, as GitHub Actions provides the Android SDK on Ubuntu
        shell: bash
        run: |
          sudo apt -qq update
          sudo apt -qq -y upgrade
          sudo apt -qq install cmake libssl-dev build-essential libffi-dev curl libz-dev ninja-build

      - name: Setup gradle
        uses: yumemi-inc/setup-java-gradle@v1
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true

      - uses: actions/checkout@v4

      - name: Setup gradle.properties
        shell: bash
        run: |
          echo XTRAS_DIR=$HOME/xtras >> $GITHUB_ENV
          echo KONAN_DIR=$HOME/.konan >> $GITHUB_ENV
          GRADLE_PROPS=$HOME/.gradle/gradle.properties
          echo Configuring $GRADLE_PROPS 
          if [ -f $GRADLE_PROPS ]; then
            echo existing $GRADLE_PROPS
            cat $GRADLE_PROPS
          fi
          cat > $GRADLE_PROPS <<PROPS
          org.gradle.caching=true
          signing.key=${{ secrets.GPG_SIGNING_KEY }}
          signing.password=${{ secrets.GPG_SIGNING_PASSWORD }}
          sonatype.profileID=${{ secrets.SONATYPE_PROFILE_ID }}
          sonatype.username=${{ secrets.SONATYPE_USERNAME }}
          sonatype.password=${{ secrets.SONATYPE_PASSWORD }}
          xtras.dir=$HOME/xtras
          PROPS
          chmod 600 $GRADLE_PROPS

#      - uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
      - name: Set up Android SDK
        if: ${{ env.ACT }} # Only run on local act setups, as GitHub Actions provides the Android SDK on Ubuntu
        uses: android-actions/setup-android@v2

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          add-to-path: true
        env:
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}


      - name: Cache Xtras dir
        id: cache_xtras
        uses: actions/cache@v3
        with:
          path: ${{ env.XTRAS_DIR }}
          key: ${{ runner.os }}-xtras

      - name: Setup gradle
        uses: yumemi-inc/setup-java-gradle@v1
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: false

      - name: List gradle tasks
        shell: bash
        run: |
          #echo ~/.konan/dependencies 
          #ls -al ~/.konan/dependencies 
          echo XTRAS_DIR = ${{ env.XTRAS_DIR }}
          echo home: $HOME

      - name: Build AndroidNativeX64
        shell: bash
        run: |
          ./gradlew publishAllPublicationsToSonatype
#          ./gradlew xtrasPackageCreateDuckdbAndroidNativeX64 

        #run: ./scripts/build_android.sh x86_64
          #      - name: Build arm64-v8a
          #        shell: bash
          #        run: ./scripts/build_android.sh arm64-v8a

#      - uses: actions/upload-artifact@v4
#        with:
#          name: xtras_duckdb_1.0.0-alpha01_androidNativeX64.tgz
#          path: ${{ env.XTRAS_DIR }}/packages/org/danbrough/duckdb/xtras_duckdb_1.0.0-alpha01_androidNativeX64.tgz

#  # This workflow contains a single job called "greet"
#  greet:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#    needs: test1
#
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Runs a single command using the runners shell
#      - name: Send greeting
#        shell: bash
#        run: |
#          echo "Hello ${{ inputs.name }} at $(date)"
#          echo xtras dir is finally $XTRAS_DIR
#          ls -l
#
#
