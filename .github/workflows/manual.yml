# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

      duckdb_version:
        description: "Git commit of duckdb to compile"
        default: "v1.0.0"
        required: true
        type: string


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ inputs.name }} at `date`"

    - name: Upgrade
      shell: bash
      run: |
        if [ ! -f upgraded ]; then
          
          apt-get install -y wget apt-transport-https gnupg
          wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | apt-key add -
          echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list
          apt update
          apt -y upgrade
          
          touch upgraded
        fi

    - name: Install
      shell: bash
      run: |
        if [ ! -f updated ]; then
          apt update
          apt -y upgrade
          apt -y install nano  git build-essential clang temurin-17-jdk
          touch updated
        fi

    - name: Configure source
      shell: bash
      run: |
        if [ ! -d duckdb ]; then
          git clone https://github.com/duckdb/duckdb
          cd duckdb
          git checkout ${{ inputs.duckdb_version }}
        fi
